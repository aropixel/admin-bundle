<?php

namespace Aropixel\AdminBundle\Repository;

use Symfony\Component\HttpFoundation\File\File;
use Doctrine\ORM\EntityRepository;
use Aropixel\AdminBundle\Entity\Fichier;

/**
 * FileRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FichierRepository extends EntityRepository
{


    public function getQueryDataTable($params) {

        //
        $qb = $this->createQueryBuilder('f');

        //
        if (strlen($params['search'])) {
            $qb->where($qb->expr()->orX(
                $qb->expr()->like('f.titre', ':search')
            ));
            $qb->setParameter('search', '%'.$params['search'].'%');
        }

        //
        $qb->orderBy('f.createdAt', 'DESC');

        return $qb;
    }


    /**
     * Import une image distante
     *
     * @param string $externalUrl
     */
    public function existRemoteFile($externalUrl)
    {
        //
        $ch = curl_init($externalUrl);
        curl_setopt($ch, CURLOPT_NOBODY, true);
        curl_exec($ch);

        // $retcode >= 400 -> not found, $retcode = 200, found.
        $retcode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
        curl_close($ch);

        return $retcode==200;
    }


    /**
     * Import une image distante
     *
     * @param string $externalUrl
     */
    public function importRemoteFile($externalUrl, $category, $titre=false)
    {

        //
        if (!$this->existRemoteFile($externalUrl)) {
            return false;
        }


        // Copie l'image dans un fichier temporaire
        set_time_limit(0);
        $tmp_path = tempnam(sys_get_temp_dir(), '');
        $tmp_fp = fopen($tmp_path, 'w+');
        $url_fp = fopen($externalUrl, 'r');
        stream_copy_to_stream($url_fp, $tmp_fp);


        // Initialise un objet File avec le ficher temporaire
        try {
            $file = new File($tmp_path);
        }
        catch (\Exception $e) {
            return false;
        }


        //
        $filename = sha1(uniqid(mt_rand(), true));
        $ext = $file->guessExtension();

        // Crée l'image en base de données
        $fichier = new Fichier();
        $fichier->setTitre($titre ?: $filename.'.'.$ext);
        $fichier->setFilename($filename.'.'.$ext);
        $fichier->setCategory($category);
        $fichier->setExtension($ext);
        $fichier->setImport($externalUrl);

        //
        $this->_em->persist($fichier);
        $this->_em->flush();

        // Déplace le fichier dans l'arborescence images
        $file->move($fichier->getUploadRootDir(), $filename.'.'.$ext);

        return $fichier;
    }

}
