<?php

namespace Aropixel\AdminBundle\Infrastructure\Media\File\Library\Repository;

use Aropixel\AdminBundle\Domain\DataTable\DataTableContext;
use Aropixel\AdminBundle\Domain\Media\File\Library\Repository\FileRepositoryInterface;
use Aropixel\AdminBundle\Domain\Media\Resolver\ClassNameResolverInterface;
use Aropixel\AdminBundle\Entity\File;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Persistence\ManagerRegistry;
use Symfony\Component\HttpFoundation\File\File as SymfonyFile;

/**
 * FileRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FileRepository extends ServiceEntityRepository implements FileRepositoryInterface
{
    public function __construct(ManagerRegistry $registry, ClassNameResolverInterface $classNameResolver)
    {
        parent::__construct($registry, $classNameResolver->getFileClassName());
    }

    public function getQueryDataTable(DataTableContext $context)
    {
        $qb = $this->createQueryBuilder('f');

        if (mb_strlen($context->getSearch())) {
            $qb->where($qb->expr()->orX(
                $qb->expr()->like('f.title', ':search')
            ));
            $qb->setParameter('search', '%' . $context->getSearch() . '%');
        }

        $qb->orderBy('f.createdAt', 'DESC');

        return $qb;
    }

    public function getCategoryQueryDataTable(DataTableContext $context)
    {
        $qb = $this->getQueryDataTable($context);
        $qb
            ->andWhere('f.category = :category')
            ->setParameter('category', $context->getAdditionalParameter('category'))
        ;

        return $qb;
    }

    /**
     * Import un fichier distante.
     */
    public function existRemoteFile(string $externalUrl)
    {
        $ch = curl_init($externalUrl);
        curl_setopt($ch, \CURLOPT_NOBODY, true);
        curl_exec($ch);

        // $retcode >= 400 -> not found, $retcode = 200, found.
        $retcode = curl_getinfo($ch, \CURLINFO_HTTP_CODE);
        curl_close($ch);

        return 200 == $retcode;
    }

    /**
     * Import un fichier distante.
     */
    public function importRemoteFile(string $externalUrl, string $category, $title = false)
    {
        if (!$this->existRemoteFile($externalUrl)) {
            return false;
        }

        // Copie le fichier dans un fichier temporaire
        set_time_limit(0);
        $tmp_path = tempnam(sys_get_temp_dir(), '');
        $tmp_fp = fopen($tmp_path, 'w+');
        $url_fp = fopen($externalUrl, 'r');
        stream_copy_to_stream($url_fp, $tmp_fp);

        // Initialise un objet File avec le ficher temporaire
        try {
            $file = new SymfonyFile($tmp_path);
        } catch (\Exception) {
            return false;
        }

        $filename = sha1(uniqid(mt_rand(), true));
        $ext = $file->guessExtension();

        // Crée le fichier en base de données
        $fichier = new File();
        $fichier->setTitle($title ?: $filename . '.' . $ext);
        $fichier->setFilename($filename . '.' . $ext);
        $fichier->setCategory($category);
        $fichier->setExtension($ext);
        $fichier->setImport($externalUrl);

        $this->_em->persist($fichier);
        $this->_em->flush();

        // Déplace le fichier dans l'arborescence images
        $file->move($fichier->getUploadRootDir(), $filename . '.' . $ext);

        return $fichier;
    }
}
